Search.setIndex({"docnames": ["dcp_client", "dcp_client.gui", "dcp_client.utils", "dcp_client_installation", "dcp_server", "dcp_server_installation", "index"], "filenames": ["dcp_client.rst", "dcp_client.gui.rst", "dcp_client.utils.rst", "dcp_client_installation.rst", "dcp_server.rst", "dcp_server_installation.rst", "index.rst"], "titles": ["dcp_client package", "dcp_client.gui package", "dcp_client.utils package", "DCP Client", "dcp_server package", "DCP Server", "Data Centric Platform"], "terms": {"gui": [0, 3, 6], "submodul": [0, 6], "main_window": [0, 6], "mainwindow": [0, 1], "on_finish": [0, 1], "on_item_eval_select": [0, 1], "on_item_inprogr_select": [0, 1], "on_item_train_select": [0, 1], "on_launch_napari_button_click": [0, 1], "on_run_inference_button_click": [0, 1], "on_train_button_click": [0, 1], "workerthread": [0, 1], "run": [0, 1, 2, 4, 6], "task_finish": [0, 1], "napari_window": [0, 6], "napariwindow": [0, 1], "axis_chang": [0, 1], "on_add_to_curated_button_click": [0, 1], "on_add_to_inprogress_button_click": [0, 1], "on_seg_channel_chang": [0, 1], "set_editable_mask": [0, 1], "switch_control": [0, 1], "switch_to_instance_mask": [0, 1], "switch_to_labels_mask": [0, 1], "update_instance_mask": [0, 1], "update_labels_mask": [0, 1], "welcome_window": [0, 6], "welcomewindow": [0, 1], "browse_eval_click": [0, 1], "browse_inprogr_click": [0, 1], "browse_train_click": [0, 1], "on_text_chang": [0, 1], "start_main": [0, 1], "start_upload_and_main": [0, 1], "util": [0, 6], "bentoml_model": [0, 6], "bentomlmodel": [0, 2], "connect": [0, 2, 3, 4], "is_connect": [0, 2], "run_infer": [0, 1, 2], "run_train": [0, 1, 2], "fsimagestorag": [0, 6], "filesystemimagestorag": [0, 2, 4, 6], "delete_imag": [0, 2], "load_imag": [0, 2, 4], "move_imag": [0, 2], "save_imag": [0, 2, 4], "set": [0, 1, 5, 6], "init": [0, 2, 5], "sync_src_dst": [0, 6], "datarsync": [0, 2], "first_sync": [0, 2], "sync": [0, 2], "compute4mask": [0, 2], "add_contour": [0, 2], "compute_new_instance_mask": [0, 2], "compute_new_labels_mask": [0, 2], "get_contour": [0, 2], "get_unique_object": [0, 2], "iconprovid": [0, 2], "icon": [0, 2], "check_equal_arrai": [0, 2], "get_path_nam": [0, 2, 4, 6], "get_path_par": [0, 2, 4, 6], "get_path_stem": [0, 2, 4, 6], "get_relative_path": [0, 2], "join_path": [0, 2, 4, 6], "read_config": [0, 2, 4, 6], "class": [0, 1, 2, 4, 5], "applic": [0, 1, 6], "ml_model": 0, "model": [0, 1, 2, 3, 6], "syncer": 0, "datasync": [0, 2, 6], "image_storag": 0, "imagestorag": [0, 2, 4, 6], "server_ip": 0, "str": [0, 1, 2, 4], "server_port": 0, "int": [0, 2, 4], "eval_data_path": [0, 1], "train_data_path": [0, 1], "inprogr_data_path": 0, "base": [0, 1, 2, 4], "object": [0, 1, 2, 3, 4, 5], "image_nam": 0, "If": [0, 1, 3, 4, 5], "list": [0, 1, 2, 3, 4], "exist": [0, 1, 2, 3, 4, 6], "current": [0, 1, 3, 4, 5, 6], "directori": [0, 1, 2, 3, 4, 5, 6], "i": [0, 1, 2, 3, 4, 5, 6], "delet": [0, 2, 3], "paramet": [0, 1, 2, 4, 6], "A": [0, 2, 4, 5, 6], "imag": [0, 1, 2, 3, 4, 5], "name": [0, 1, 2, 3, 4, 5, 6], "none": [0, 1, 2, 3, 4], "load": [0, 2, 4], "an": [0, 1, 2, 3, 4], "from": [0, 1, 2, 3, 4, 5, 6], "file": [0, 1, 2, 3, 4, 5, 6], "system": 0, "storag": [0, 2, 4], "The": [0, 1, 2, 4, 5, 6], "provid": [0, 1, 2, 3, 4, 5], "select": [0, 1, 3], "return": [0, 1, 2, 4, 5], "type": [0, 1, 2, 4, 5], "numpi": [0, 1, 2, 4], "ndarrai": [0, 1, 2, 4], "dst_directori": 0, "move_seg": 0, "fals": [0, 1, 2, 4], "move": [0, 1, 2, 3], "cur_selected_img": [0, 2, 4], "destin": [0, 2], "where": [0, 1, 2, 4], "bool": [0, 1, 2, 4], "true": [0, 1, 2, 4], "correspond": [0, 3, 4, 6], "segment": [0, 1, 2, 3, 4, 5, 6], "along": [0, 3, 4], "default": [0, 1, 2, 3, 4, 5], "check": [0, 2, 4], "ml": 0, "server": [0, 1, 2, 3, 4, 6], "possibl": [0, 1], "infer": [0, 2, 5, 6], "all": [0, 1, 2, 3, 4, 5, 6], "train": [0, 1, 2, 3, 4, 5, 6], "data": [0, 1, 2, 4, 5], "avail": [0, 3, 5], "img": [0, 2, 4], "save": [0, 2, 4, 5], "arrai": [0, 2, 4], "filenam": [0, 2, 3], "search_seg": [0, 4], "search": [0, 4, 5], "cur_selected_path": 0, "associ": [0, 3, 4], "These": [0, 3, 4], "should": [0, 2, 3, 4, 5, 6], "have": [0, 3, 5, 6], "_seg": [0, 3, 6], "extens": [0, 2, 4], "try_server_connect": 0, "attempt": 0, "upload_data_to_serv": 0, "upload": [0, 1, 3], "eval": [0, 4, 5], "abc": 0, "abstract": 0, "src": [0, 2, 3, 5], "dst": [0, 2], "path": [0, 1, 2, 4, 5, 6], "from_directori": [0, 2], "tupl": [0, 1, 4], "ani": [0, 3, 4, 5], "dtype": [0, 4], "_scalartype_co": 0, "to_directori": [0, 2], "img_directori": 0, "full": [0, 4, 5, 6], "app": [1, 6], "mywidget": 1, "main": [1, 3, 4, 5], "window": [1, 2, 6], "widget": 1, "open": [1, 3], "both": [1, 2], "ar": [1, 2, 3, 4, 5, 6], "user": [1, 2, 3, 4, 6], "can": [1, 2, 3, 4, 5, 6], "view": [1, 2, 3], "get": [1, 2, 4, 6], "label": [1, 2, 3, 4, 5, 6], "visualis": [1, 3, 6], "result": [1, 3, 5], "string": [1, 2, 4, 5], "chosen": 1, "without": [1, 2], "up": [1, 3, 5], "call": [1, 3, 4, 5], "onc": [1, 3, 5], "worker": [1, 4], "thread": 1, "emit": 1, "finish": 1, "signal": 1, "see": [1, 3, 4, 5], "item": 1, "uncur": [1, 3, 6], "dataset": [1, 3, 6], "folder": [1, 2, 3, 6], "qmodelindex": 1, "progress": [1, 3], "curat": [1, 3, 6], "launch": [1, 6], "napari": [1, 2, 3, 5, 6], "after": [1, 3, 4, 5, 6], "click": [1, 3], "gener": [1, 3, 5], "button": [1, 3], "task": [1, 2, 4, 5, 6], "parent": [1, 2, 4], "qthread": 1, "displai": [1, 3], "puls": 1, "progressbar": 1, "dure": [1, 2, 4, 6], "serv": [1, 4, 5], "execut": [1, 4], "message_text": 1, "message_titl": 1, "viewer": [1, 6], "fix": [1, 3], "param": 1, "instanc": [1, 2, 3, 4, 5, 6], "event": 1, "trigger": 1, "each": [1, 2, 3, 4], "time": [1, 3, 5, 6], "switch": 1, "between": [1, 2], "mask": [1, 2, 3, 4, 5], "channel": [1, 4, 5], "At": 1, "thi": [1, 2, 3, 4, 5], "point": 1, "need": [1, 2, 3, 4, 5, 6], "updat": [1, 2, 4], "accord": [1, 2], "chang": [1, 2, 3, 5], "made": [1, 2], "tot": 1, "defin": [1, 3, 4], "what": 1, "happen": 1, "when": [1, 3], "differ": [1, 4], "layer": [1, 3, 4], "function": [1, 2, 3, 4, 5, 6], "implement": [1, 4], "In": [1, 3, 5], "theori": 1, "us": [1, 2, 3, 4, 5], "choos": 1, "which": [1, 2, 3, 4, 5, 6], "edit": [1, 3, 6], "paint": 1, "eras": 1, "onli": [1, 2, 3, 4, 5, 6], "target_widget": 1, "statu": 1, "info_messag": 1, "enabl": 1, "disabl": 1, "specif": [1, 4], "control": 1, "within": [1, 4], "qctrl": 1, "option": [1, 2, 3, 4], "add": [1, 2, 3, 4], "info": [1, 3], "messag": [1, 3], "hover": 1, "over": 1, "some": [1, 6], "activ": [1, 2, 4], "mode": 1, "paint_button": 1, "erase_button": 1, "fill_button": 1, "non": [1, 4, 6], "instance_mask": [1, 2], "labels_mask": [1, 2], "ha": [1, 2, 3, 5], "been": [1, 3, 5], "remov": [1, 2, 3, 6], "accordingli": [1, 2], "sinc": 1, "last": 1, "welcom": [1, 6], "first": [1, 2, 4], "dialog": 1, "allow": [1, 6], "support": [1, 2, 4], "jpg": [1, 6], "jpeg": [1, 6], "png": [1, 4, 6], "tiff": [1, 3, 6], "tif": [1, 6], "By": 1, "start": [1, 3, 4, 5, 6], "evalu": [1, 3, 4, 5], "qfiledialog": 1, "valid": 1, "textbox": 1, "line": 1, "qlineedit": 1, "field_obj": 1, "field_nam": 1, "text": 1, "input": [1, 4], "field": 1, "copi": 1, "being": [1, 3], "uniqu": [1, 2], "config": [1, 2, 3, 4, 5], "remot": [1, 3, 4, 5, 6], "local": [1, 2, 3, 6], "ask": 1, "confirm": [1, 6], "befor": [1, 2, 3, 5, 6], "client": [2, 5, 6], "bentoml": [2, 4, 5, 6], "ip": [2, 3], "0": [2, 4, 5], "port": [2, 3, 5], "7010": [2, 3, 5], "address": 2, "number": [2, 3], "success": 2, "otherwis": [2, 4], "properti": [2, 4], "data_path": 2, "unsuccess": 2, "respons": 2, "handl": [2, 4, 5, 6], "oper": 2, "filesystem": 2, "specifi": [2, 3, 4, 5], "contain": [2, 3, 4, 5], "one": [2, 3, 4, 5], "anoth": 2, "sourc": 2, "user_nam": 2, "host_nam": 2, "server_repo_path": 2, "rsync": 2, "bash": [2, 5], "command": 2, "structur": [2, 4], "creat": [2, 3, 4, 6], "synchron": 2, "either": [2, 3, 6], "wherea": [2, 3], "we": [2, 3, 5, 6], "wish": [2, 3, 4, 5], "sent": 2, "want": [2, 3, 4, 5], "method": [2, 4], "manipul": [2, 4], "static": 2, "contours_mask": 2, "contour": 2, "pixel": 2, "annot": [2, 6], "hold": 2, "instance_id": 2, "includ": [2, 3, 4, 5, 6], "given": [2, 4], "also": [2, 3, 4], "so": [2, 3, 4, 5], "far": 2, "entir": 2, "color": 2, "background": [2, 4], "therefor": 2, "original_instance_mask": 2, "old_inst": 2, "id": 2, "new": [2, 3], "those": 2, "find": [2, 4], "identifi": [2, 4], "prevent": 2, "problem": 2, "merg": 2, "binari": [2, 4], "rest": 2, "active_mask": 2, "qfileiconprovid": 2, "icontyp": 2, "request": [2, 3], "qicon": 2, "array1": 2, "array2": 2, "two": [2, 3, 4, 5, 6], "equal": [2, 4], "second": [2, 4], "filepath": [2, 4], "stem": [2, 4], "its": 2, "root_dir": [2, 4], "join": [2, 4], "root": [2, 4], "config_path": [2, 4], "cfg": [2, 3, 4, 5], "dict": [2, 4], "read": [2, 4, 6], "configur": [2, 4, 5, 6], "section": [2, 4, 5], "you": [2, 3, 4, 5, 6], "e": [2, 3, 4, 5, 6], "g": [2, 3, 4, 6], "setup": [2, 4, 5], "dictionari": [2, 4], "our": [3, 5, 6], "platform": [3, 5], "microscopi": [3, 5, 6], "make": [3, 5], "sure": [3, 5], "navig": [3, 5], "futur": [3, 5], "expect": [3, 5], "test": [3, 4], "conda": 3, "environ": [3, 5], "python": [3, 4, 5], "version": [3, 4], "9": 3, "mac": 3, "machin": 3, "your": [3, 5, 6], "dedic": [3, 5], "pip": [3, 5], "dcp_client": [3, 6], "pleas": [3, 5], "obei": [3, 5], "formal": [3, 5], "json": [3, 5], "format": [3, 4, 5, 6], "here": [3, 5], "how": 3, "interact": [3, 6], "There": 3, "fzj": 3, "jusuf": 3, "cloud": 3, "To": [3, 5, 6], "host": 3, "localhost": [3, 5], "servic": [3, 4, 5], "rocki": 3, "jsc": 3, "vm": 3, "home": 3, "my": 3, "project": [3, 4, 5], "134": 3, "94": 3, "198": 3, "230": 3, "continu": 3, "doc": 3, "dcp_server_instal": 3, "instruct": [3, 6], "note": 3, "order": [3, 4], "succe": 3, "contact": 3, "team": 3, "develop": 3, "thei": [3, 6], "accept": [3, 5, 6], "easier": [3, 5], "work": [3, 5], "just": 3, "renam": [3, 5], "simpli": [3, 5], "py": [3, 4, 5], "now": 3, "pop": 3, "throughout": 3, "follow": [3, 4, 5, 6], "store": [3, 4, 5], "mai": 3, "accompani": 3, "present": 3, "share": 3, "same": [3, 4, 5, 6], "append": 3, "suffix": 3, "dcp_server": [3, 5, 6], "multipl": [3, 6], "do": [3, 5, 6], "intermedi": 3, "dir": 3, "skip": 3, "requir": [3, 4, 6], "No": 3, "affect": 3, "final": [3, 4], "complet": 3, "finalis": 3, "won": 3, "t": [3, 4, 5], "abl": [3, 5], "them": 3, "three": [3, 5], "receiv": 3, "notifi": 3, "ok": 3, "appear": 3, "next": 3, "give": 3, "previou": [3, 5], "segment_imag": [3, 4], "softwar": [3, 6], "http": [3, 5], "org": 3, "stabl": 3, "ad": [3, 4], "exampl": 3, "seen": 3, "below": [3, 6], "wherev": 3, "necessari": [3, 4], "100": 3, "certain": 3, "about": 3, "sever": 3, "examin": 3, "later": 3, "initi": 3, "other": [3, 6], "1_seg": 3, "appropri": 3, "would": 3, "1_seg_cb": 3, "1_cb_seg": 3, "more": [3, 5, 6], "learn": [3, 4], "singl": [3, 4], "automat": 3, "alreadi": 3, "correct": [3, 6], "done": 3, "repeat": 3, "coupl": 3, "until": [3, 5], "few": 3, "place": 3, "depend": 3, "qualit": 3, "might": 3, "fewer": 3, "most": 3, "like": 3, "suffici": 3, "mani": 3, "alwai": 3, "small": 3, "adjust": 3, "satisfi": 3, "remain": 3, "everi": [3, 5, 6], "higher": 3, "qualiti": 3, "hit": 3, "enter": 3, "kei": 3, "equival": 3, "maco": 3, "variou": 4, "side": [4, 6], "relat": 4, "process": [4, 5], "deal": 4, "retriev": 4, "pair": 4, "size": 4, "prepar": 4, "rescal": 4, "resiz": 4, "cell": 4, "classif": 4, "cellclassifierfcnn": [4, 5, 6], "cellclassifiershallowmodel": [4, 5, 6], "cellposepatchcnn": [4, 5, 6], "customcellposemodel": [4, 5, 6], "unet": [4, 5, 6], "forward": 4, "pass": [4, 5, 6], "gfpprojectsegment": [4, 5, 6], "generalsegment": [4, 5, 6], "mitoprojectsegment": [4, 5, 6], "custombentoservic": [4, 6], "customrunn": [4, 6], "comput": 4, "featur": [4, 5], "extract": [4, 5], "data_root": [4, 5], "model_us": 4, "everyth": 4, "transform": 4, "get_image_seg_pair": 4, "image_seg": 4, "get_image_size_properti": 4, "file_extens": 4, "height": 4, "width": 4, "z_axi": 4, "get_unsupported_fil": 4, "unsupport": 4, "found": [4, 5], "is_grai": 4, "skimag": 4, "prepare_images_and_masks_for_train": 4, "train_img_mask_pair": 4, "rescale_imag": 4, "channel_ax": 4, "2": [4, 6], "axi": [4, 5], "resize_mask": 4, "match": [4, 5], "origin": [4, 5], "scikit": 4, "spline": 4, "interpol": 4, "1": [4, 6], "to_save_path": 4, "eg": 4, "new_imag": 4, "search_imag": 4, "model_config": 4, "train_config": 4, "eval_config": 4, "fulli": 4, "convolut": 4, "classifi": [4, 5], "cannot": 4, "standalon": 4, "dcp": 4, "predict": 4, "np": 4, "uint8": 4, "y_hat": 4, "torch": 4, "tensor": 4, "x": 4, "perform": 4, "output": 4, "through": 4, "network": 4, "shape": [4, 5], "3": [4, 6], "dx": 4, "dy": 4, "update_config": 4, "shallow": 4, "x_test": 4, "x_train": 4, "y_train": 4, "model_nam": 4, "cellpos": [4, 5], "patch": [4, 5], "cnn": [4, 5], "uint16": 4, "segmentor": [4, 5], "clasiffi": 4, "h": [4, 6], "w": [4, 6], "3d": 4, "cellposemodel": [4, 5], "custom": [4, 6], "inherit": [4, 5], "attribut": 4, "addit": 4, "2d": [4, 6], "do_3d": 4, "masks_to_outlin": 4, "outlin": 4, "neural": 4, "architectur": 4, "semant": [4, 5, 6], "doubleconv": 4, "in_channel": 4, "out_channel": 4, "consist": 4, "consecut": 4, "batch": 4, "normal": 4, "relu": 4, "runner": [4, 5], "async": 4, "input_path": 4, "list_of_imag": 4, "": [4, 5], "obtain": [4, 5], "service_nam": [4, 5], "start_servic": 4, "save_model_path": 4, "runnabl": 4, "repres": 4, "unit": 4, "scale": 4, "independ": 4, "meet": 4, "supported_resourc": 4, "cpu": 4, "supports_cpu_multi_thread": 4, "bentoml_runnable_methods__": 4, "runnablemethod": 4, "func": 4, "runnablemethodconfig": 4, "batchabl": 4, "batch_dim": 4, "input_spec": 4, "output_spec": 4, "_bentoml_runnable_method": 4, "check_and_load_model": 4, "repositori": 4, "latest": 4, "memori": 4, "kwarg": 4, "p": [4, 5], "r": 4, "create_dataset_for_rf": [4, 6], "intens": [4, 5], "region": 4, "interest": 4, "create_patch_dataset": [4, 6], "masks_class": 4, "masks_inst": 4, "noise_intens": 4, "max_patch_s": 4, "include_mask": 4, "split": 4, "center": 4, "around": [4, 6], "float": 4, "nois": 4, "maximum": 4, "bound": 4, "box": 4, "edg": 4, "flag": 4, "indic": [4, 5], "whether": 4, "patch_siz": 4, "algorithm": 4, "max": 4, "convent": 4, "dim": [4, 5, 6], "cxhxw": 4, "crop_centered_padded_patch": [4, 6], "patch_center_xi": 4, "obj_label": 4, "crop": 4, "coordin": 4, "c": [4, 6], "appli": 4, "pad": 4, "row": 4, "column": 4, "out": [4, 6], "central": 4, "element": 4, "For": [4, 6], "randomforest": [4, 5], "calcul": 4, "pyradiom": 4, "extract_intensity_featur": [4, 6], "median": 4, "mean": 4, "25th": 4, "75th": 4, "percentil": 4, "find_max_patch_s": [4, 6], "get_center_of_mass_and_label": [4, 6], "mass": 4, "get_centered_patch": [4, 6], "p_size": 4, "5": [4, 6], "mask_class": 4, "argument": [4, 5], "patch_mask": 4, "instance_label": 4, "class_label": 4, "get_file_extens": [4, 6], "get_object": [4, 6], "compon": 4, "slice": 4, "get_shape_featur": [4, 6], "radiom": 4, "elong": 4, "spheric": 4, "perimet": 4, "surfac": 4, "centric": 5, "commun": [5, 6], "via": [5, 6], "librari": [5, 6], "step": [5, 6], "verifi": 5, "visit": 5, "web": 5, "browser": 5, "six": 5, "part": 5, "mark": 5, "mandatori": 5, "segmentationclass": [5, 6], "stale": 5, "model_to_us": 5, "inform": 5, "accepted_typ": 5, "analysi": 5, "seg_name_str": 5, "end": 5, "runner_nam": 5, "bento_model_path": 5, "re": 5, "under": 5, "instanti": 5, "take": 5, "care": 5, "__init__": 5, "leav": 5, "empti": [5, 6], "mask_channel_axi": 5, "multi": 5, "variabl": 5, "kept": 5, "wai": 5, "visual": 5, "correctli": 5, "panopt": [5, 6], "config_inst": 5, "config_semant": 5, "integr": [5, 6], "vanilla": 5, "u": 5, "net": 5, "sequenti": 5, "while": 5, "fcnn": 5, "individu": 5, "extarct": 5, "random": 5, "forest": 5, "post": 5, "deduc": 5, "Will": 5, "touch": 5, "NOT": 5, "issu": 5, "solv": 5, "doesn": 5, "build": 5, "svc": 5, "reload": 5, "kind": 6, "instal": 6, "describ": 6, "try": 6, "github": 6, "repo": 6, "plai": 6, "encourag": 6, "practic": 6, "With": 6, "friendli": 6, "interfac": 6, "detect": 6, "outlier": 6, "sampl": 6, "error": 6, "tool": 6, "establish": 6, "consensu": 6, "focu": 6, "less": 6, "rgb": 6, "rgba": 6, "howev": 6, "convert": 6, "grayscal": 6, "segement": 6, "image1_seg": 6, "guid": 6, "4": 6, "overview": 6, "6": 6, "workflow": 6, "intend": 6, "usag": 6, "summari": 6, "shortcut": 6, "docker": 6, "compos": 6, "packag": 6, "modul": 6, "serviceclass": 6}, "objects": {"dcp_client": [[0, 0, 0, "-", "app"], [1, 0, 0, "-", "gui"], [2, 0, 0, "-", "utils"]], "dcp_client.app": [[0, 1, 1, "", "Application"], [0, 1, 1, "", "DataSync"], [0, 1, 1, "", "ImageStorage"], [0, 1, 1, "", "Model"]], "dcp_client.app.Application": [[0, 2, 1, "", "delete_images"], [0, 2, 1, "", "load_image"], [0, 2, 1, "", "move_images"], [0, 2, 1, "", "run_inference"], [0, 2, 1, "", "run_train"], [0, 2, 1, "", "save_image"], [0, 2, 1, "", "search_segs"], [0, 2, 1, "", "try_server_connection"], [0, 2, 1, "", "upload_data_to_server"]], "dcp_client.app.DataSync": [[0, 2, 1, "", "sync"]], "dcp_client.app.ImageStorage": [[0, 2, 1, "", "load_image"], [0, 2, 1, "", "save_image"], [0, 2, 1, "", "search_segs"]], "dcp_client.app.Model": [[0, 2, 1, "", "run_inference"], [0, 2, 1, "", "run_train"]], "dcp_client.gui": [[1, 0, 0, "-", "main_window"], [1, 0, 0, "-", "napari_window"], [1, 0, 0, "-", "welcome_window"]], "dcp_client.gui.main_window": [[1, 1, 1, "", "MainWindow"], [1, 1, 1, "", "WorkerThread"]], "dcp_client.gui.main_window.MainWindow": [[1, 2, 1, "", "main_window"], [1, 2, 1, "", "on_finished"], [1, 2, 1, "", "on_item_eval_selected"], [1, 2, 1, "", "on_item_inprogr_selected"], [1, 2, 1, "", "on_item_train_selected"], [1, 2, 1, "", "on_launch_napari_button_clicked"], [1, 2, 1, "", "on_run_inference_button_clicked"], [1, 2, 1, "", "on_train_button_clicked"]], "dcp_client.gui.main_window.WorkerThread": [[1, 2, 1, "", "run"], [1, 3, 1, "", "task_finished"]], "dcp_client.gui.napari_window": [[1, 1, 1, "", "NapariWindow"]], "dcp_client.gui.napari_window.NapariWindow": [[1, 2, 1, "", "axis_changed"], [1, 2, 1, "", "on_add_to_curated_button_clicked"], [1, 2, 1, "", "on_add_to_inprogress_button_clicked"], [1, 2, 1, "", "on_seg_channel_changed"], [1, 2, 1, "", "set_editable_mask"], [1, 2, 1, "", "switch_controls"], [1, 2, 1, "", "switch_to_instance_mask"], [1, 2, 1, "", "switch_to_labels_mask"], [1, 2, 1, "", "update_instance_mask"], [1, 2, 1, "", "update_labels_mask"]], "dcp_client.gui.welcome_window": [[1, 1, 1, "", "WelcomeWindow"]], "dcp_client.gui.welcome_window.WelcomeWindow": [[1, 2, 1, "", "browse_eval_clicked"], [1, 2, 1, "", "browse_inprogr_clicked"], [1, 2, 1, "", "browse_train_clicked"], [1, 2, 1, "", "on_text_changed"], [1, 2, 1, "", "start_main"], [1, 2, 1, "", "start_upload_and_main"]], "dcp_client.utils": [[2, 0, 0, "-", "bentoml_model"], [2, 0, 0, "-", "fsimagestorage"], [2, 0, 0, "-", "settings"], [2, 0, 0, "-", "sync_src_dst"], [2, 0, 0, "-", "utils"]], "dcp_client.utils.bentoml_model": [[2, 1, 1, "", "BentomlModel"]], "dcp_client.utils.bentoml_model.BentomlModel": [[2, 2, 1, "", "connect"], [2, 4, 1, "", "is_connected"], [2, 2, 1, "", "run_inference"], [2, 2, 1, "", "run_train"]], "dcp_client.utils.fsimagestorage": [[2, 1, 1, "", "FilesystemImageStorage"]], "dcp_client.utils.fsimagestorage.FilesystemImageStorage": [[2, 2, 1, "", "delete_image"], [2, 2, 1, "", "load_image"], [2, 2, 1, "", "move_image"], [2, 2, 1, "", "save_image"]], "dcp_client.utils.settings": [[2, 5, 1, "", "init"]], "dcp_client.utils.sync_src_dst": [[2, 1, 1, "", "DataRSync"]], "dcp_client.utils.sync_src_dst.DataRSync": [[2, 2, 1, "", "first_sync"], [2, 2, 1, "", "sync"]], "dcp_client.utils.utils": [[2, 1, 1, "", "Compute4Mask"], [2, 1, 1, "", "IconProvider"], [2, 5, 1, "", "check_equal_arrays"], [2, 5, 1, "", "get_path_name"], [2, 5, 1, "", "get_path_parent"], [2, 5, 1, "", "get_path_stem"], [2, 5, 1, "", "get_relative_path"], [2, 5, 1, "", "join_path"], [2, 5, 1, "", "read_config"]], "dcp_client.utils.utils.Compute4Mask": [[2, 2, 1, "", "add_contour"], [2, 2, 1, "", "compute_new_instance_mask"], [2, 2, 1, "", "compute_new_labels_mask"], [2, 2, 1, "", "get_contours"], [2, 2, 1, "", "get_unique_objects"]], "dcp_client.utils.utils.IconProvider": [[2, 2, 1, "", "icon"]], "": [[4, 0, 0, "-", "dcp_server"]], "dcp_server": [[4, 0, 0, "-", "fsimagestorage"], [4, 0, 0, "-", "models"], [4, 0, 0, "-", "segmentationclasses"], [4, 0, 0, "-", "serviceclasses"], [4, 0, 0, "-", "utils"]], "dcp_server.fsimagestorage": [[4, 1, 1, "", "FilesystemImageStorage"]], "dcp_server.fsimagestorage.FilesystemImageStorage": [[4, 2, 1, "", "get_image_seg_pairs"], [4, 2, 1, "", "get_image_size_properties"], [4, 2, 1, "", "get_unsupported_files"], [4, 2, 1, "", "load_image"], [4, 2, 1, "", "prepare_images_and_masks_for_training"], [4, 2, 1, "", "rescale_image"], [4, 2, 1, "", "resize_mask"], [4, 2, 1, "", "save_image"], [4, 2, 1, "", "search_images"], [4, 2, 1, "", "search_segs"]], "dcp_server.models": [[4, 1, 1, "", "CellClassifierFCNN"], [4, 1, 1, "", "CellClassifierShallowModel"], [4, 1, 1, "", "CellposePatchCNN"], [4, 1, 1, "", "CustomCellposeModel"], [4, 1, 1, "", "UNet"]], "dcp_server.models.CellClassifierFCNN": [[4, 2, 1, "", "eval"], [4, 2, 1, "", "forward"], [4, 2, 1, "", "train"], [4, 3, 1, "", "training"], [4, 2, 1, "", "update_configs"]], "dcp_server.models.CellClassifierShallowModel": [[4, 2, 1, "", "eval"], [4, 2, 1, "", "train"]], "dcp_server.models.CellposePatchCNN": [[4, 2, 1, "", "eval"], [4, 2, 1, "", "train"], [4, 3, 1, "", "training"], [4, 2, 1, "", "update_configs"]], "dcp_server.models.CustomCellposeModel": [[4, 2, 1, "", "eval"], [4, 2, 1, "", "masks_to_outlines"], [4, 2, 1, "", "train"], [4, 3, 1, "", "training"], [4, 2, 1, "", "update_configs"]], "dcp_server.models.UNet": [[4, 1, 1, "", "DoubleConv"], [4, 2, 1, "", "eval"], [4, 2, 1, "", "forward"], [4, 2, 1, "", "train"], [4, 3, 1, "", "training"]], "dcp_server.models.UNet.DoubleConv": [[4, 2, 1, "", "forward"], [4, 3, 1, "", "training"]], "dcp_server.segmentationclasses": [[4, 1, 1, "", "GFPProjectSegmentation"], [4, 1, 1, "", "GeneralSegmentation"], [4, 1, 1, "", "MitoProjectSegmentation"]], "dcp_server.segmentationclasses.GFPProjectSegmentation": [[4, 2, 1, "", "segment_image"]], "dcp_server.segmentationclasses.GeneralSegmentation": [[4, 2, 1, "", "segment_image"], [4, 2, 1, "", "train"]], "dcp_server.segmentationclasses.MitoProjectSegmentation": [[4, 2, 1, "", "segment_image"]], "dcp_server.serviceclasses": [[4, 1, 1, "", "CustomBentoService"], [4, 1, 1, "", "CustomRunnable"]], "dcp_server.serviceclasses.CustomBentoService": [[4, 2, 1, "", "start_service"]], "dcp_server.serviceclasses.CustomRunnable": [[4, 3, 1, "", "SUPPORTED_RESOURCES"], [4, 3, 1, "", "SUPPORTS_CPU_MULTI_THREADING"], [4, 3, 1, "", "bentoml_runnable_methods__"], [4, 2, 1, "", "check_and_load_model"], [4, 2, 1, "", "evaluate"], [4, 2, 1, "", "train"]], "dcp_server.utils": [[4, 5, 1, "", "create_dataset_for_rf"], [4, 5, 1, "", "create_patch_dataset"], [4, 5, 1, "", "crop_centered_padded_patch"], [4, 5, 1, "", "extract_intensity_features"], [4, 5, 1, "", "find_max_patch_size"], [4, 5, 1, "", "get_center_of_mass_and_label"], [4, 5, 1, "", "get_centered_patches"], [4, 5, 1, "", "get_file_extension"], [4, 5, 1, "", "get_objects"], [4, 5, 1, "", "get_path_name"], [4, 5, 1, "", "get_path_parent"], [4, 5, 1, "", "get_path_stem"], [4, 5, 1, "", "get_shape_features"], [4, 5, 1, "", "join_path"], [4, 5, 1, "", "read_config"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"dcp_client": [0, 1, 2], "packag": [0, 1, 2, 4], "app": 0, "modul": [0, 1, 2, 4], "gui": 1, "submodul": [1, 2, 4], "main_window": 1, "napari_window": 1, "welcome_window": 1, "util": [2, 4], "bentoml_model": 2, "fsimagestorag": [2, 4], "set": [2, 3], "sync_src_dst": 2, "dcp": [3, 5, 6], "client": 3, "instal": [3, 5], "run": [3, 5], "A": 3, "step": 3, "guid": 3, "1": 3, "configur": 3, "2": 3, "launch": [3, 5], "3": 3, "welcom": 3, "window": 3, "4": 3, "path": 3, "5": 3, "data": [3, 6], "overview": [3, 4], "6": 3, "The": 3, "viewer": 3, "centric": [3, 6], "workflow": 3, "intend": 3, "usag": 3, "summari": 3, "shortcut": 3, "dcp_server": 4, "model": [4, 5], "segmentationclass": 4, "serviceclass": 4, "server": 5, "custom": 5, "develop": [5, 6], "docker": 5, "compos": 5, "non": 5, "interact": 5, "platform": 6, "how": 6, "us": 6, "toi": 6, "enabl": 6, "imag": 6, "convent": 6, "content": 6}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"dcp_client package": [[0, "dcp-client-package"]], "dcp_client.app module": [[0, "module-dcp_client.app"]], "dcp_client.gui package": [[1, "module-dcp_client.gui"]], "Submodules": [[1, "submodules"], [2, "submodules"], [4, "id1"]], "dcp_client.gui.main_window module": [[1, "module-dcp_client.gui.main_window"]], "dcp_client.gui.napari_window module": [[1, "module-dcp_client.gui.napari_window"]], "dcp_client.gui.welcome_window module": [[1, "module-dcp_client.gui.welcome_window"]], "dcp_client.utils package": [[2, "module-dcp_client.utils"]], "dcp_client.utils.bentoml_model module": [[2, "module-dcp_client.utils.bentoml_model"]], "dcp_client.utils.fsimagestorage module": [[2, "module-dcp_client.utils.fsimagestorage"]], "dcp_client.utils.settings module": [[2, "module-dcp_client.utils.settings"]], "dcp_client.utils.sync_src_dst module": [[2, "module-dcp_client.utils.sync_src_dst"]], "dcp_client.utils.utils module": [[2, "module-dcp_client.utils.utils"]], "DCP Client": [[3, "dcp-client"]], "Installation": [[3, "installation"], [5, "installation"]], "Running the client: A step-by-step guide!": [[3, "running-the-client-a-step-by-step-guide"]], "1. Configurations": [[3, "configurations"]], "2. Launching the client": [[3, "launching-the-client"]], "3. Welcome window": [[3, "welcome-window"]], "4. Setting paths": [[3, "setting-paths"]], "5. Data Overview": [[3, "data-overview"]], "6. The viewer": [[3, "the-viewer"]], "Data centric workflow [intended usage summary]": [[3, "data-centric-workflow-intended-usage-summary"]], "DCP Shortcuts": [[3, "dcp-shortcuts"]], "dcp_server package": [[4, "module-dcp_server"]], "Overview of dcp_server Package": [[4, "overview-of-dcp-server-package"]], "Submodules:": [[4, "submodules"]], "dcp_server.fsimagestorage module": [[4, "module-dcp_server.fsimagestorage"]], "dcp_server.models module": [[4, "module-dcp_server.models"]], "dcp_server.segmentationclasses module": [[4, "module-dcp_server.segmentationclasses"]], "dcp_server.serviceclasses module": [[4, "module-dcp_server.serviceclasses"]], "dcp_server.utils module": [[4, "module-dcp_server.utils"]], "DCP Server": [[5, "dcp-server"]], "Launch DCP Server": [[5, "launch-dcp-server"]], "Customization (for developers)": [[5, "customization-for-developers"]], "Models": [[5, "models"]], "Running with Docker": [[5, "running-with-docker"]], "Docker-Compose": [[5, "docker-compose"]], "Docker Non-Interactively": [[5, "docker-non-interactively"]], "Docker Interactively": [[5, "docker-interactively"]], "Data Centric Platform": [[6, "data-centric-platform"]], "How to use it?": [[6, "how-to-use-it"]], "Toy data": [[6, "toy-data"]], "Enabling data centric development": [[6, "enabling-data-centric-development"]], "DCP Imaging Conventions": [[6, "dcp-imaging-conventions"]], "Contents:": [[6, null]]}, "indexentries": {"application (class in dcp_client.app)": [[0, "dcp_client.app.Application"]], "datasync (class in dcp_client.app)": [[0, "dcp_client.app.DataSync"]], "imagestorage (class in dcp_client.app)": [[0, "dcp_client.app.ImageStorage"]], "model (class in dcp_client.app)": [[0, "dcp_client.app.Model"]], "dcp_client.app": [[0, "module-dcp_client.app"]], "delete_images() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.delete_images"]], "load_image() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.load_image"]], "load_image() (dcp_client.app.imagestorage method)": [[0, "dcp_client.app.ImageStorage.load_image"]], "module": [[0, "module-dcp_client.app"], [1, "module-dcp_client.gui"], [1, "module-dcp_client.gui.main_window"], [1, "module-dcp_client.gui.napari_window"], [1, "module-dcp_client.gui.welcome_window"], [2, "module-dcp_client.utils"], [2, "module-dcp_client.utils.bentoml_model"], [2, "module-dcp_client.utils.fsimagestorage"], [2, "module-dcp_client.utils.settings"], [2, "module-dcp_client.utils.sync_src_dst"], [2, "module-dcp_client.utils.utils"], [4, "module-dcp_server"], [4, "module-dcp_server.fsimagestorage"], [4, "module-dcp_server.models"], [4, "module-dcp_server.segmentationclasses"], [4, "module-dcp_server.serviceclasses"], [4, "module-dcp_server.utils"]], "move_images() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.move_images"]], "run_inference() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.run_inference"]], "run_inference() (dcp_client.app.model method)": [[0, "dcp_client.app.Model.run_inference"]], "run_train() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.run_train"]], "run_train() (dcp_client.app.model method)": [[0, "dcp_client.app.Model.run_train"]], "save_image() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.save_image"]], "save_image() (dcp_client.app.imagestorage method)": [[0, "dcp_client.app.ImageStorage.save_image"]], "search_segs() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.search_segs"]], "search_segs() (dcp_client.app.imagestorage method)": [[0, "dcp_client.app.ImageStorage.search_segs"]], "sync() (dcp_client.app.datasync method)": [[0, "dcp_client.app.DataSync.sync"]], "try_server_connection() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.try_server_connection"]], "upload_data_to_server() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.upload_data_to_server"]], "mainwindow (class in dcp_client.gui.main_window)": [[1, "dcp_client.gui.main_window.MainWindow"]], "napariwindow (class in dcp_client.gui.napari_window)": [[1, "dcp_client.gui.napari_window.NapariWindow"]], "welcomewindow (class in dcp_client.gui.welcome_window)": [[1, "dcp_client.gui.welcome_window.WelcomeWindow"]], "workerthread (class in dcp_client.gui.main_window)": [[1, "dcp_client.gui.main_window.WorkerThread"]], "axis_changed() (dcp_client.gui.napari_window.napariwindow method)": [[1, "dcp_client.gui.napari_window.NapariWindow.axis_changed"]], "browse_eval_clicked() (dcp_client.gui.welcome_window.welcomewindow method)": [[1, "dcp_client.gui.welcome_window.WelcomeWindow.browse_eval_clicked"]], "browse_inprogr_clicked() (dcp_client.gui.welcome_window.welcomewindow method)": [[1, "dcp_client.gui.welcome_window.WelcomeWindow.browse_inprogr_clicked"]], "browse_train_clicked() (dcp_client.gui.welcome_window.welcomewindow method)": [[1, "dcp_client.gui.welcome_window.WelcomeWindow.browse_train_clicked"]], "dcp_client.gui": [[1, "module-dcp_client.gui"]], "dcp_client.gui.main_window": [[1, "module-dcp_client.gui.main_window"]], "dcp_client.gui.napari_window": [[1, "module-dcp_client.gui.napari_window"]], "dcp_client.gui.welcome_window": [[1, "module-dcp_client.gui.welcome_window"]], "main_window() (dcp_client.gui.main_window.mainwindow method)": [[1, "dcp_client.gui.main_window.MainWindow.main_window"]], "on_add_to_curated_button_clicked() (dcp_client.gui.napari_window.napariwindow method)": [[1, "dcp_client.gui.napari_window.NapariWindow.on_add_to_curated_button_clicked"]], "on_add_to_inprogress_button_clicked() (dcp_client.gui.napari_window.napariwindow method)": [[1, "dcp_client.gui.napari_window.NapariWindow.on_add_to_inprogress_button_clicked"]], "on_finished() (dcp_client.gui.main_window.mainwindow method)": [[1, "dcp_client.gui.main_window.MainWindow.on_finished"]], "on_item_eval_selected() (dcp_client.gui.main_window.mainwindow method)": [[1, "dcp_client.gui.main_window.MainWindow.on_item_eval_selected"]], "on_item_inprogr_selected() (dcp_client.gui.main_window.mainwindow method)": [[1, "dcp_client.gui.main_window.MainWindow.on_item_inprogr_selected"]], "on_item_train_selected() (dcp_client.gui.main_window.mainwindow method)": [[1, "dcp_client.gui.main_window.MainWindow.on_item_train_selected"]], "on_launch_napari_button_clicked() (dcp_client.gui.main_window.mainwindow method)": [[1, "dcp_client.gui.main_window.MainWindow.on_launch_napari_button_clicked"]], "on_run_inference_button_clicked() (dcp_client.gui.main_window.mainwindow method)": [[1, "dcp_client.gui.main_window.MainWindow.on_run_inference_button_clicked"]], "on_seg_channel_changed() (dcp_client.gui.napari_window.napariwindow method)": [[1, "dcp_client.gui.napari_window.NapariWindow.on_seg_channel_changed"]], "on_text_changed() (dcp_client.gui.welcome_window.welcomewindow method)": [[1, "dcp_client.gui.welcome_window.WelcomeWindow.on_text_changed"]], "on_train_button_clicked() (dcp_client.gui.main_window.mainwindow method)": [[1, "dcp_client.gui.main_window.MainWindow.on_train_button_clicked"]], "run() (dcp_client.gui.main_window.workerthread method)": [[1, "dcp_client.gui.main_window.WorkerThread.run"]], "set_editable_mask() (dcp_client.gui.napari_window.napariwindow method)": [[1, "dcp_client.gui.napari_window.NapariWindow.set_editable_mask"]], "start_main() (dcp_client.gui.welcome_window.welcomewindow method)": [[1, "dcp_client.gui.welcome_window.WelcomeWindow.start_main"]], "start_upload_and_main() (dcp_client.gui.welcome_window.welcomewindow method)": [[1, "dcp_client.gui.welcome_window.WelcomeWindow.start_upload_and_main"]], "switch_controls() (dcp_client.gui.napari_window.napariwindow method)": [[1, "dcp_client.gui.napari_window.NapariWindow.switch_controls"]], "switch_to_instance_mask() (dcp_client.gui.napari_window.napariwindow method)": [[1, "dcp_client.gui.napari_window.NapariWindow.switch_to_instance_mask"]], "switch_to_labels_mask() (dcp_client.gui.napari_window.napariwindow method)": [[1, "dcp_client.gui.napari_window.NapariWindow.switch_to_labels_mask"]], "task_finished (dcp_client.gui.main_window.workerthread attribute)": [[1, "dcp_client.gui.main_window.WorkerThread.task_finished"]], "update_instance_mask() (dcp_client.gui.napari_window.napariwindow method)": [[1, "dcp_client.gui.napari_window.NapariWindow.update_instance_mask"]], "update_labels_mask() (dcp_client.gui.napari_window.napariwindow method)": [[1, "dcp_client.gui.napari_window.NapariWindow.update_labels_mask"]], "bentomlmodel (class in dcp_client.utils.bentoml_model)": [[2, "dcp_client.utils.bentoml_model.BentomlModel"]], "compute4mask (class in dcp_client.utils.utils)": [[2, "dcp_client.utils.utils.Compute4Mask"]], "datarsync (class in dcp_client.utils.sync_src_dst)": [[2, "dcp_client.utils.sync_src_dst.DataRSync"]], "filesystemimagestorage (class in dcp_client.utils.fsimagestorage)": [[2, "dcp_client.utils.fsimagestorage.FilesystemImageStorage"]], "iconprovider (class in dcp_client.utils.utils)": [[2, "dcp_client.utils.utils.IconProvider"]], "add_contour() (dcp_client.utils.utils.compute4mask static method)": [[2, "dcp_client.utils.utils.Compute4Mask.add_contour"]], "check_equal_arrays() (in module dcp_client.utils.utils)": [[2, "dcp_client.utils.utils.check_equal_arrays"]], "compute_new_instance_mask() (dcp_client.utils.utils.compute4mask static method)": [[2, "dcp_client.utils.utils.Compute4Mask.compute_new_instance_mask"]], "compute_new_labels_mask() (dcp_client.utils.utils.compute4mask static method)": [[2, "dcp_client.utils.utils.Compute4Mask.compute_new_labels_mask"]], "connect() (dcp_client.utils.bentoml_model.bentomlmodel method)": [[2, "dcp_client.utils.bentoml_model.BentomlModel.connect"]], "dcp_client.utils": [[2, "module-dcp_client.utils"]], "dcp_client.utils.bentoml_model": [[2, "module-dcp_client.utils.bentoml_model"]], "dcp_client.utils.fsimagestorage": [[2, "module-dcp_client.utils.fsimagestorage"]], "dcp_client.utils.settings": [[2, "module-dcp_client.utils.settings"]], "dcp_client.utils.sync_src_dst": [[2, "module-dcp_client.utils.sync_src_dst"]], "dcp_client.utils.utils": [[2, "module-dcp_client.utils.utils"]], "delete_image() (dcp_client.utils.fsimagestorage.filesystemimagestorage method)": [[2, "dcp_client.utils.fsimagestorage.FilesystemImageStorage.delete_image"]], "first_sync() (dcp_client.utils.sync_src_dst.datarsync method)": [[2, "dcp_client.utils.sync_src_dst.DataRSync.first_sync"]], "get_contours() (dcp_client.utils.utils.compute4mask static method)": [[2, "dcp_client.utils.utils.Compute4Mask.get_contours"]], "get_path_name() (in module dcp_client.utils.utils)": [[2, "dcp_client.utils.utils.get_path_name"]], "get_path_parent() (in module dcp_client.utils.utils)": [[2, "dcp_client.utils.utils.get_path_parent"]], "get_path_stem() (in module dcp_client.utils.utils)": [[2, "dcp_client.utils.utils.get_path_stem"]], "get_relative_path() (in module dcp_client.utils.utils)": [[2, "dcp_client.utils.utils.get_relative_path"]], "get_unique_objects() (dcp_client.utils.utils.compute4mask static method)": [[2, "dcp_client.utils.utils.Compute4Mask.get_unique_objects"]], "icon() (dcp_client.utils.utils.iconprovider method)": [[2, "dcp_client.utils.utils.IconProvider.icon"]], "init() (in module dcp_client.utils.settings)": [[2, "dcp_client.utils.settings.init"]], "is_connected (dcp_client.utils.bentoml_model.bentomlmodel property)": [[2, "dcp_client.utils.bentoml_model.BentomlModel.is_connected"]], "join_path() (in module dcp_client.utils.utils)": [[2, "dcp_client.utils.utils.join_path"]], "load_image() (dcp_client.utils.fsimagestorage.filesystemimagestorage method)": [[2, "dcp_client.utils.fsimagestorage.FilesystemImageStorage.load_image"]], "move_image() (dcp_client.utils.fsimagestorage.filesystemimagestorage method)": [[2, "dcp_client.utils.fsimagestorage.FilesystemImageStorage.move_image"]], "read_config() (in module dcp_client.utils.utils)": [[2, "dcp_client.utils.utils.read_config"]], "run_inference() (dcp_client.utils.bentoml_model.bentomlmodel method)": [[2, "dcp_client.utils.bentoml_model.BentomlModel.run_inference"]], "run_train() (dcp_client.utils.bentoml_model.bentomlmodel method)": [[2, "dcp_client.utils.bentoml_model.BentomlModel.run_train"]], "save_image() (dcp_client.utils.fsimagestorage.filesystemimagestorage method)": [[2, "dcp_client.utils.fsimagestorage.FilesystemImageStorage.save_image"]], "sync() (dcp_client.utils.sync_src_dst.datarsync method)": [[2, "dcp_client.utils.sync_src_dst.DataRSync.sync"]], "cellclassifierfcnn (class in dcp_server.models)": [[4, "dcp_server.models.CellClassifierFCNN"]], "cellclassifiershallowmodel (class in dcp_server.models)": [[4, "dcp_server.models.CellClassifierShallowModel"]], "cellposepatchcnn (class in dcp_server.models)": [[4, "dcp_server.models.CellposePatchCNN"]], "custombentoservice (class in dcp_server.serviceclasses)": [[4, "dcp_server.serviceclasses.CustomBentoService"]], "customcellposemodel (class in dcp_server.models)": [[4, "dcp_server.models.CustomCellposeModel"]], "customrunnable (class in dcp_server.serviceclasses)": [[4, "dcp_server.serviceclasses.CustomRunnable"]], "filesystemimagestorage (class in dcp_server.fsimagestorage)": [[4, "dcp_server.fsimagestorage.FilesystemImageStorage"]], "gfpprojectsegmentation (class in dcp_server.segmentationclasses)": [[4, "dcp_server.segmentationclasses.GFPProjectSegmentation"]], "generalsegmentation (class in dcp_server.segmentationclasses)": [[4, "dcp_server.segmentationclasses.GeneralSegmentation"]], "mitoprojectsegmentation (class in dcp_server.segmentationclasses)": [[4, "dcp_server.segmentationclasses.MitoProjectSegmentation"]], "supported_resources (dcp_server.serviceclasses.customrunnable attribute)": [[4, "dcp_server.serviceclasses.CustomRunnable.SUPPORTED_RESOURCES"]], "supports_cpu_multi_threading (dcp_server.serviceclasses.customrunnable attribute)": [[4, "dcp_server.serviceclasses.CustomRunnable.SUPPORTS_CPU_MULTI_THREADING"]], "unet (class in dcp_server.models)": [[4, "dcp_server.models.UNet"]], "unet.doubleconv (class in dcp_server.models)": [[4, "dcp_server.models.UNet.DoubleConv"]], "bentoml_runnable_methods__ (dcp_server.serviceclasses.customrunnable attribute)": [[4, "dcp_server.serviceclasses.CustomRunnable.bentoml_runnable_methods__"]], "check_and_load_model() (dcp_server.serviceclasses.customrunnable method)": [[4, "dcp_server.serviceclasses.CustomRunnable.check_and_load_model"]], "create_dataset_for_rf() (in module dcp_server.utils)": [[4, "dcp_server.utils.create_dataset_for_rf"]], "create_patch_dataset() (in module dcp_server.utils)": [[4, "dcp_server.utils.create_patch_dataset"]], "crop_centered_padded_patch() (in module dcp_server.utils)": [[4, "dcp_server.utils.crop_centered_padded_patch"]], "dcp_server": [[4, "module-dcp_server"]], "dcp_server.fsimagestorage": [[4, "module-dcp_server.fsimagestorage"]], "dcp_server.models": [[4, "module-dcp_server.models"]], "dcp_server.segmentationclasses": [[4, "module-dcp_server.segmentationclasses"]], "dcp_server.serviceclasses": [[4, "module-dcp_server.serviceclasses"]], "dcp_server.utils": [[4, "module-dcp_server.utils"]], "eval() (dcp_server.models.cellclassifierfcnn method)": [[4, "dcp_server.models.CellClassifierFCNN.eval"]], "eval() (dcp_server.models.cellclassifiershallowmodel method)": [[4, "dcp_server.models.CellClassifierShallowModel.eval"]], "eval() (dcp_server.models.cellposepatchcnn method)": [[4, "dcp_server.models.CellposePatchCNN.eval"]], "eval() (dcp_server.models.customcellposemodel method)": [[4, "dcp_server.models.CustomCellposeModel.eval"]], "eval() (dcp_server.models.unet method)": [[4, "dcp_server.models.UNet.eval"]], "evaluate() (dcp_server.serviceclasses.customrunnable method)": [[4, "dcp_server.serviceclasses.CustomRunnable.evaluate"]], "extract_intensity_features() (in module dcp_server.utils)": [[4, "dcp_server.utils.extract_intensity_features"]], "find_max_patch_size() (in module dcp_server.utils)": [[4, "dcp_server.utils.find_max_patch_size"]], "forward() (dcp_server.models.cellclassifierfcnn method)": [[4, "dcp_server.models.CellClassifierFCNN.forward"]], "forward() (dcp_server.models.unet method)": [[4, "dcp_server.models.UNet.forward"]], "forward() (dcp_server.models.unet.doubleconv method)": [[4, "dcp_server.models.UNet.DoubleConv.forward"]], "get_center_of_mass_and_label() (in module dcp_server.utils)": [[4, "dcp_server.utils.get_center_of_mass_and_label"]], "get_centered_patches() (in module dcp_server.utils)": [[4, "dcp_server.utils.get_centered_patches"]], "get_file_extension() (in module dcp_server.utils)": [[4, "dcp_server.utils.get_file_extension"]], "get_image_seg_pairs() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[4, "dcp_server.fsimagestorage.FilesystemImageStorage.get_image_seg_pairs"]], "get_image_size_properties() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[4, "dcp_server.fsimagestorage.FilesystemImageStorage.get_image_size_properties"]], "get_objects() (in module dcp_server.utils)": [[4, "dcp_server.utils.get_objects"]], "get_path_name() (in module dcp_server.utils)": [[4, "dcp_server.utils.get_path_name"]], "get_path_parent() (in module dcp_server.utils)": [[4, "dcp_server.utils.get_path_parent"]], "get_path_stem() (in module dcp_server.utils)": [[4, "dcp_server.utils.get_path_stem"]], "get_shape_features() (in module dcp_server.utils)": [[4, "dcp_server.utils.get_shape_features"]], "get_unsupported_files() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[4, "dcp_server.fsimagestorage.FilesystemImageStorage.get_unsupported_files"]], "join_path() (in module dcp_server.utils)": [[4, "dcp_server.utils.join_path"]], "load_image() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[4, "dcp_server.fsimagestorage.FilesystemImageStorage.load_image"]], "masks_to_outlines() (dcp_server.models.customcellposemodel method)": [[4, "dcp_server.models.CustomCellposeModel.masks_to_outlines"]], "prepare_images_and_masks_for_training() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[4, "dcp_server.fsimagestorage.FilesystemImageStorage.prepare_images_and_masks_for_training"]], "read_config() (in module dcp_server.utils)": [[4, "dcp_server.utils.read_config"]], "rescale_image() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[4, "dcp_server.fsimagestorage.FilesystemImageStorage.rescale_image"]], "resize_mask() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[4, "dcp_server.fsimagestorage.FilesystemImageStorage.resize_mask"]], "save_image() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[4, "dcp_server.fsimagestorage.FilesystemImageStorage.save_image"]], "search_images() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[4, "dcp_server.fsimagestorage.FilesystemImageStorage.search_images"]], "search_segs() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[4, "dcp_server.fsimagestorage.FilesystemImageStorage.search_segs"]], "segment_image() (dcp_server.segmentationclasses.gfpprojectsegmentation method)": [[4, "dcp_server.segmentationclasses.GFPProjectSegmentation.segment_image"]], "segment_image() (dcp_server.segmentationclasses.generalsegmentation method)": [[4, "dcp_server.segmentationclasses.GeneralSegmentation.segment_image"]], "segment_image() (dcp_server.segmentationclasses.mitoprojectsegmentation method)": [[4, "dcp_server.segmentationclasses.MitoProjectSegmentation.segment_image"]], "start_service() (dcp_server.serviceclasses.custombentoservice method)": [[4, "dcp_server.serviceclasses.CustomBentoService.start_service"]], "train() (dcp_server.models.cellclassifierfcnn method)": [[4, "dcp_server.models.CellClassifierFCNN.train"]], "train() (dcp_server.models.cellclassifiershallowmodel method)": [[4, "dcp_server.models.CellClassifierShallowModel.train"]], "train() (dcp_server.models.cellposepatchcnn method)": [[4, "dcp_server.models.CellposePatchCNN.train"]], "train() (dcp_server.models.customcellposemodel method)": [[4, "dcp_server.models.CustomCellposeModel.train"]], "train() (dcp_server.models.unet method)": [[4, "dcp_server.models.UNet.train"]], "train() (dcp_server.segmentationclasses.generalsegmentation method)": [[4, "dcp_server.segmentationclasses.GeneralSegmentation.train"]], "train() (dcp_server.serviceclasses.customrunnable method)": [[4, "dcp_server.serviceclasses.CustomRunnable.train"]], "training (dcp_server.models.cellclassifierfcnn attribute)": [[4, "dcp_server.models.CellClassifierFCNN.training"]], "training (dcp_server.models.cellposepatchcnn attribute)": [[4, "dcp_server.models.CellposePatchCNN.training"]], "training (dcp_server.models.customcellposemodel attribute)": [[4, "dcp_server.models.CustomCellposeModel.training"]], "training (dcp_server.models.unet attribute)": [[4, "dcp_server.models.UNet.training"]], "training (dcp_server.models.unet.doubleconv attribute)": [[4, "dcp_server.models.UNet.DoubleConv.training"]], "update_configs() (dcp_server.models.cellclassifierfcnn method)": [[4, "dcp_server.models.CellClassifierFCNN.update_configs"]], "update_configs() (dcp_server.models.cellposepatchcnn method)": [[4, "dcp_server.models.CellposePatchCNN.update_configs"]], "update_configs() (dcp_server.models.customcellposemodel method)": [[4, "dcp_server.models.CustomCellposeModel.update_configs"]]}})