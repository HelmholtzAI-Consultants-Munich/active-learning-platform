Search.setIndex({"docnames": ["dcp_client", "dcp_client_installation", "dcp_server", "dcp_server_installation", "index", "modules"], "filenames": ["dcp_client.rst", "dcp_client_installation.rst", "dcp_server.rst", "dcp_server_installation.rst", "index.rst", "modules.rst"], "titles": ["dcp_client package", "DCP Client", "dcp_server.fsimagestorage module", "DCP Server", "Data Centric Platform", "src"], "terms": {"The": [0, 2, 3, 4], "our": [1, 3, 4], "centric": 3, "platform": [1, 3], "microscopi": [1, 3, 4], "imag": [0, 1, 2, 3, 4], "befor": [1, 3, 4], "start": [1, 2, 3, 4], "make": [1, 3], "sure": [1, 3], "you": [1, 2, 3, 4], "have": [0, 1, 3], "navig": [1, 3], "src": [0, 1, 3], "all": [0, 1, 2, 3, 4], "futur": [1, 3], "expect": [1, 3], "ar": [1, 2, 3, 4], "directori": [0, 1, 2, 3, 4], "thi": [1, 2, 3], "ha": [1, 3], "been": [1, 3], "test": [1, 2], "us": [1, 2, 3], "conda": 1, "environ": [1, 3], "python": [1, 2, 3], "version": [1, 2], "9": 1, "mac": 1, "local": [1, 4], "machin": 1, "In": [1, 3], "your": [1, 3, 4], "dedic": [1, 3], "pip": [1, 3], "e": [1, 2, 3], "gui": [1, 4], "need": [1, 2, 3, 4], "up": [1, 3], "file": [0, 1, 2, 3], "_dcp_client": [], "config": [1, 2, 3], "cfg_": [], "pleas": [1, 3], "obei": [1, 3], "formal": [1, 3], "json": [1, 3], "format": [1, 2, 3], "here": [1, 3], "we": [1, 2, 3, 4], "defin": [1, 2], "how": 1, "interact": [1, 4], "server": [0, 1, 4], "There": 1, "current": [0, 1, 2, 3], "two": [1, 2, 3, 4], "option": [1, 2], "avail": [0, 1, 3], "connect": [0, 1, 2], "instanc": [1, 2, 3, 4], "fzj": 1, "jusuf": 1, "cloud": 1, "To": [1, 3, 4], "user": [1, 2, 4], "host": 1, "none": [0, 1, 2], "ip": 1, "localhost": [1, 3], "port": [1, 3], "7010": [1, 3], "servic": [1, 2, 3], "xxxxx": [], "xxxxxx": [], "xxx": [], "xx": [], "xxxx": [], "continu": 1, "i": [0, 1, 2, 3, 4], "either": [1, 4], "see": [1, 2, 3], "instruct": [1, 4], "note": 1, "order": [1, 2], "succe": 1, "contact": 1, "team": 1, "develop": 1, "so": [1, 2, 3], "thei": 1, "can": [1, 2, 3, 4], "add": [1, 2], "list": [0, 1, 2], "accept": [1, 3], "request": 1, "easier": [1, 3], "provid": [0, 1, 2, 3], "one": [1, 2, 3], "work": [1, 3], "when": 1, "remot": [1, 2, 4], "just": 1, "renam": [1, 3], "wish": [1, 2, 3], "cfg": [1, 2, 3], "default": [0, 1, 2, 3], "after": [1, 2, 3], "simpli": [1, 3], "dcp_client": [1, 4], "main": [1, 2, 3, 4], "py": [1, 2, 3], "should": [0, 1, 2, 3, 4], "now": 1, "pop": 1, "select": [0, 1], "which": [1, 2, 3, 4], "throughout": 1, "workflow": 4, "follow": [1, 2, 3, 4], "uncur": [1, 4], "dataset": [1, 4], "folder": [1, 4], "intend": 4, "store": [1, 2, 3], "These": [0, 1], "mai": 1, "accompani": 1, "correspond": [0, 1, 2], "segment": [0, 1, 2, 3, 4], "If": [0, 1, 2, 3], "present": 1, "share": 1, "same": [1, 2, 3], "filenam": [0, 1], "associ": [0, 1, 2], "append": 1, "suffix": 1, "specifi": [1, 2], "dcp_server": [1, 3, 4], "_seg": [0, 1], "curat": [1, 4], "progress": 1, "move": [0, 1], "each": [1, 2], "multipl": [1, 4], "chang": [1, 3], "napari": [1, 3, 4], "layer": [1, 2], "edit": [1, 4], "viewer": 4, "do": [1, 3, 4], "want": [1, 2, 3], "an": [0, 1, 2], "intermedi": 1, "dir": 1, "skip": 1, "requir": [1, 2, 4], "No": 1, "function": [1, 2, 3, 4], "affect": 1, "onli": [1, 2, 3, 4], "from": [0, 1, 2, 3, 4], "contain": [1, 2, 3], "along": [0, 1, 2], "final": [1, 2], "complet": 1, "finalis": 1, "won": 1, "t": [1, 2, 3], "abl": 1, "them": [1, 3], "train": [0, 1, 2, 3, 4], "model": [0, 1, 4], "three": 1, "click": 1, "button": 1, "receiv": 1, "messag": 1, "notifi": 1, "upload": [0, 1], "ok": 1, "appear": 1, "next": 1, "give": 1, "previou": 1, "gener": [1, 3], "label": [1, 2, 3, 4], "call": [1, 2, 3], "segment_imag": [1, 2, 4], "view": 1, "fix": 1, "class": [0, 2, 3], "filesystemimagestorag": [2, 4], "data_root": 2, "model_us": 2, "base": [0, 2], "object": [0, 1, 2, 3], "deal": 2, "everyth": 2, "relat": 2, "process": 2, "load": [0, 2], "save": [0, 2, 3], "transform": 2, "get_image_seg_pair": [2, 4], "get": [2, 4], "pair": 2, "image_seg": 2, "g": [1, 2], "creat": [1, 2, 4], "data": [0, 2, 3], "paramet": [0, 2, 4], "str": [0, 2], "path": [0, 2, 4], "search": [0, 2, 3], "return": [0, 2, 3], "tupl": [0, 2], "type": [0, 2, 3], "get_image_size_properti": [2, 4], "img": [0, 2], "file_extens": 2, "properti": 2, "size": 2, "ndarrai": [0, 2], "numpi": [0, 2], "arrai": [0, 2], "extens": [0, 2], "height": 2, "width": 2, "z_axi": 2, "get_unsupported_fil": [2, 4], "unsupport": 2, "found": [2, 3], "given": 2, "direcori": 2, "load_imag": [0, 2, 4], "cur_selected_img": [0, 2], "is_grai": 2, "true": [0, 2], "skiimag": 2, "full": [0, 2, 4], "prepare_images_and_masks_for_train": [2, 4], "train_img_mask_pair": 2, "mask": [1, 2, 3], "rescale_imag": [2, 4], "channel_ax": 2, "2": [2, 4], "rescal": 2, "int": [0, 2], "channel": [2, 3], "axi": [2, 3], "resize_mask": [2, 4], "resiz": 2, "match": 2, "origin": [2, 3], "scikit": 2, "spline": 2, "interpol": 2, "0": [2, 3], "dtype": [0, 2], "bool": [0, 2], "1": [2, 4], "otherwis": 2, "save_imag": [0, 2, 4], "to_save_path": 2, "also": [1, 2], "name": [0, 1, 2, 3], "eg": 2, "new_imag": 2, "png": 2, "search_imag": [2, 4], "support": 2, "setup": [2, 3], "section": 2, "search_seg": [0, 2, 4], "find": 2, "cellclassifierfcnn": [2, 3, 4], "model_config": 2, "train_config": 2, "eval_config": 2, "fulli": 2, "convolut": 2, "classifi": [2, 3], "cell": 2, "cannot": 2, "standalon": 2, "dcp": [2, 4], "eval": [0, 2, 3, 4], "evalu": [1, 2, 3, 4], "predict": [2, 3], "np": 2, "uint8": 2, "input": 2, "y_hat": 2, "torch": 2, "tensor": 2, "forward": [2, 4], "x": 2, "perform": 2, "pass": [2, 3, 4], "output": 2, "through": 2, "network": 2, "shape": 2, "3": [2, 4], "dx": 2, "dy": 2, "classif": 2, "update_config": [2, 4], "updat": 2, "configur": [2, 3, 4], "dict": 2, "dictionari": 2, "cellclassifiershallowmodel": [2, 4], "implement": 2, "shallow": 2, "learn": [1, 2], "x_test": 2, "featur": 2, "x_train": 2, "y_train": 2, "cellposepatchcnn": [2, 3, 4], "model_nam": [2, 4], "cellpos": [2, 3], "patch": [2, 3], "cnn": [2, 3], "uint16": 2, "first": 2, "segmentor": [2, 3], "clasiffi": 2, "second": 2, "h": 2, "w": 2, "3d": 2, "customcellposemodel": [2, 3, 4], "cellposemodel": [2, 3], "custom": [2, 4], "inherit": [2, 3], "attribut": 2, "addit": 2, "method": 2, "project": [1, 2], "2d": 2, "singl": [1, 2], "do_3d": 2, "masks_to_outlin": [2, 4], "outlin": 2, "unet": [2, 4], "neural": 2, "architectur": 2, "semant": [2, 4], "in_channel": 2, "number": [1, 2], "out_channel": 2, "4": [2, 4], "encod": 2, "level": 2, "64": 2, "128": 2, "256": 2, "512": 2, "doubleconv": [2, 4], "consist": 2, "consecut": 2, "batch": 2, "normal": 2, "relu": 2, "activ": 2, "self": 2, "gfpprojectsegment": [2, 3, 4], "imagestorag": [0, 2, 4], "runner": [2, 3], "generalsegment": [2, 3, 4], "async": 2, "input_path": 2, "list_of_imag": 2, "where": [0, 2], "serv": [2, 3], "": [2, 3], "mitoprojectsegment": [2, 3, 4], "differ": 2, "parent": 2, "obtain": [2, 3], "custombentoservic": [2, 4], "service_nam": [2, 3], "bentoml": [2, 3, 4], "necessari": [1, 2], "start_servic": [2, 4], "customrunn": [2, 4], "save_model_path": [2, 3], "runnabl": 2, "repres": 2, "unit": 2, "comput": 2, "execut": 2, "worker": 2, "scale": 2, "independ": 2, "meet": 2, "supported_resourc": [2, 4], "cpu": 2, "supports_cpu_multi_thread": [2, 4], "fals": [0, 2], "bentoml_runnable_methods__": [2, 4], "runnablemethod": 2, "ani": [0, 1, 2, 3], "func": 2, "runnablemethodconfig": 2, "batchabl": 2, "batch_dim": 2, "input_spec": 2, "output_spec": 2, "_bentoml_runnable_method": 2, "check_and_load_model": [2, 4], "check": [0, 2], "exist": [0, 1, 2], "repositori": 2, "latest": [2, 3], "memori": 2, "kwarg": 2, "p": [2, 3], "r": 2, "create_dataset_for_rf": [2, 4], "extract": 2, "intens": 2, "within": 2, "region": 2, "A": [0, 2, 4], "interest": 2, "create_patch_dataset": [2, 4], "masks_class": 2, "masks_inst": 2, "noise_intens": 2, "max_patch_s": 2, "include_mask": 2, "split": 2, "equal": 2, "center": 2, "around": [2, 4], "binari": 2, "float": 2, "nois": 2, "maximum": 2, "bound": 2, "box": 2, "edg": 2, "flag": 2, "indic": [2, 3], "whether": 2, "includ": [1, 2, 3, 4], "patch_siz": 2, "algorithm": 2, "run": [0, 2, 4], "max": 2, "convent": 2, "dim": [2, 3], "cxhxw": 2, "crop_centered_padded_patch": [2, 4], "patch_center_xi": 2, "obj_label": 2, "crop": 2, "coordin": 2, "c": 2, "appli": 2, "pad": 2, "row": 2, "column": 2, "dure": [2, 4], "out": [2, 4], "non": [2, 4], "central": 2, "element": 2, "For": [2, 4], "randomforest": 2, "calcul": 2, "pyradiom": 2, "ad": [1, 2], "background": 2, "extract_intensity_featur": [2, 4], "median": 2, "mean": 2, "25th": 2, "75th": 2, "percentil": 2, "find_max_patch_s": [2, 4], "get_center_of_mass_and_label": [2, 4], "mass": 2, "get_centered_patch": [2, 4], "p_size": 2, "5": [2, 4], "mask_class": 2, "identifi": 2, "argument": [2, 3], "patch_mask": 2, "instance_label": 2, "class_label": 2, "get_file_extens": [2, 4], "get_object": [2, 4], "compon": 2, "slice": 2, "get_path_nam": [2, 4], "filepath": 2, "get_path_par": [2, 4], "get_path_stem": [2, 4], "stem": 2, "get_shape_featur": [2, 4], "radiom": 2, "elong": 2, "spheric": 2, "perimet": 2, "surfac": 2, "join_path": [2, 4], "root_dir": 2, "join": 2, "root": 2, "read_config": [2, 4], "config_path": 2, "read": 2, "string": [2, 3], "client": [3, 4], "commun": [3, 4], "via": [3, 4], "librari": [3, 4], "everi": [1, 3, 4], "time": [1, 3, 4], "infer": [0, 3, 4], "step": [3, 4], "onc": [1, 3], "verifi": 3, "visit": 3, "http": [1, 3], "web": 3, "browser": 3, "set": [3, 4], "five": 3, "part": 3, "mark": 3, "mandatori": 3, "segmentationclass": [3, 4], "stale": 3, "accepted_typ": 3, "analysi": 3, "seg_name_str": 3, "end": 3, "model_to_us": 3, "sequenti": 3, "re": 3, "under": 3, "runner_nam": 3, "instanti": 3, "take": 3, "care": 3, "__init__": 3, "init": 3, "readthedoc": 3, "io": 3, "en": 3, "api": 3, "html": 3, "id7": 3, "leav": 3, "empti": [3, 4], "id3": 3, "mask_channel_axi": 3, "multi": 3, "result": [1, 3], "variabl": 3, "kept": 3, "wai": 3, "visual": 3, "correctli": 3, "panopt": [3, 4], "task": [3, 4], "while": 3, "config_inst": 3, "integr": [3, 4], "wise": 3, "NOT": 3, "until": [1, 3], "issu": 3, "solv": 3, "doesn": 3, "build": 3, "bash": 3, "svc": 3, "reload": 3, "kind": 4, "softwar": [1, 4], "instal": 4, "side": 4, "describ": 4, "handl": 4, "try": 4, "github": 4, "repo": 4, "some": 4, "other": [1, 4], "welcom": 4, "window": 4, "plai": 4, "encourag": 4, "practic": 4, "With": 4, "friendli": 4, "interfac": 4, "detect": 4, "remov": [1, 4], "outlier": 4, "confirm": 4, "sampl": 4, "correct": [1, 4], "error": 4, "visualis": [1, 4], "tool": 4, "establish": 4, "consensu": 4, "allow": 4, "annot": 4, "focu": 4, "guid": 4, "launch": 4, "overview": 4, "docker": 4, "compos": 4, "fsimagestorag": 4, "modul": 4, "serviceclass": 4, "util": 4, "packag": 4, "app": 4, "more": [1, 4], "less": 4, "applic": [0, 4], "ml_model": 0, "syncer": 0, "datasync": [0, 4], "image_storag": 0, "server_ip": 0, "server_port": 0, "eval_data_path": 0, "train_data_path": 0, "inprogr_data_path": 0, "delete_imag": 0, "image_nam": 0, "delet": [0, 1], "system": 0, "storag": 0, "move_imag": 0, "dst_directori": 0, "move_seg": 0, "destin": 0, "run_infer": 0, "ml": 0, "possibl": 0, "run_train": 0, "cur_selected_path": 0, "try_server_connect": 0, "attempt": 0, "upload_data_to_serv": 0, "abc": 0, "abstract": 0, "sync": 0, "dst": 0, "from_directori": 0, "_scalartype_co": 0, "to_directori": 0, "img_directori": 0, "rocki": 1, "jsc": 1, "vm": 1, "home": 1, "my": 1, "134": 1, "94": 1, "198": 1, "230": 1, "doc": 1, "dcp_server_instal": 1, "org": 1, "stabl": 1, "exampl": 1, "seen": 1, "below": 1, "wherev": 1, "100": 1, "certain": 1, "about": 1, "sever": 1, "being": 1, "examin": 1, "later": 1, "initi": 1, "new": 1, "info": 1, "1_seg": 1, "tiff": 1, "appropri": 1, "would": 1, "1_seg_cb": 1, "1_cb_seg": 1, "displai": 1, "open": 1, "automat": 1, "alreadi": 1, "done": 1, "repeat": 1, "coupl": 1, "few": 1, "place": 1, "depend": 1, "qualit": 1, "might": 1, "fewer": 1, "most": 1, "like": 1, "suffici": 1, "wherea": 1, "mani": 1, "alwai": 1, "small": 1, "adjust": 1, "satisfi": 1, "remain": 1, "higher": 1, "qualiti": 1, "6": 4, "usag": 4, "summari": 4}, "objects": {"dcp_client": [[0, 0, 0, "-", "app"], [0, 0, 0, "-", "main"]], "dcp_client.app": [[0, 1, 1, "", "Application"], [0, 1, 1, "", "DataSync"], [0, 1, 1, "", "ImageStorage"], [0, 1, 1, "", "Model"]], "dcp_client.app.Application": [[0, 2, 1, "", "delete_images"], [0, 2, 1, "", "load_image"], [0, 2, 1, "", "move_images"], [0, 2, 1, "", "run_inference"], [0, 2, 1, "", "run_train"], [0, 2, 1, "", "save_image"], [0, 2, 1, "", "search_segs"], [0, 2, 1, "", "try_server_connection"], [0, 2, 1, "", "upload_data_to_server"]], "dcp_client.app.DataSync": [[0, 2, 1, "", "sync"]], "dcp_client.app.ImageStorage": [[0, 2, 1, "", "load_image"], [0, 2, 1, "", "save_image"], [0, 2, 1, "", "search_segs"]], "dcp_client.app.Model": [[0, 2, 1, "", "run_inference"], [0, 2, 1, "", "run_train"]], "dcp_client.main": [[0, 3, 1, "", "main"]], "dcp_server": [[2, 0, 0, "-", "fsimagestorage"], [2, 0, 0, "-", "models"], [2, 0, 0, "-", "segmentationclasses"], [2, 0, 0, "-", "serviceclasses"], [2, 0, 0, "-", "utils"]], "dcp_server.fsimagestorage": [[2, 1, 1, "", "FilesystemImageStorage"]], "dcp_server.fsimagestorage.FilesystemImageStorage": [[2, 2, 1, "", "get_image_seg_pairs"], [2, 2, 1, "", "get_image_size_properties"], [2, 2, 1, "", "get_unsupported_files"], [2, 2, 1, "", "load_image"], [2, 2, 1, "", "prepare_images_and_masks_for_training"], [2, 2, 1, "", "rescale_image"], [2, 2, 1, "", "resize_mask"], [2, 2, 1, "", "save_image"], [2, 2, 1, "", "search_images"], [2, 2, 1, "", "search_segs"]], "dcp_server.models": [[2, 1, 1, "", "CellClassifierFCNN"], [2, 1, 1, "", "CellClassifierShallowModel"], [2, 1, 1, "", "CellposePatchCNN"], [2, 1, 1, "", "CustomCellposeModel"], [2, 1, 1, "", "UNet"]], "dcp_server.models.CellClassifierFCNN": [[2, 2, 1, "", "eval"], [2, 2, 1, "", "forward"], [2, 2, 1, "", "train"], [2, 2, 1, "", "update_configs"]], "dcp_server.models.CellClassifierShallowModel": [[2, 2, 1, "", "eval"], [2, 2, 1, "", "train"]], "dcp_server.models.CellposePatchCNN": [[2, 2, 1, "", "eval"], [2, 2, 1, "", "train"], [2, 2, 1, "", "update_configs"]], "dcp_server.models.CustomCellposeModel": [[2, 2, 1, "", "eval"], [2, 2, 1, "", "masks_to_outlines"], [2, 2, 1, "", "train"], [2, 2, 1, "", "update_configs"]], "dcp_server.models.UNet": [[2, 1, 1, "", "DoubleConv"], [2, 2, 1, "", "eval"], [2, 2, 1, "", "forward"], [2, 4, 1, "", "model_name"], [2, 2, 1, "", "train"]], "dcp_server.models.UNet.DoubleConv": [[2, 2, 1, "", "forward"]], "dcp_server.segmentationclasses": [[2, 1, 1, "", "GFPProjectSegmentation"], [2, 1, 1, "", "GeneralSegmentation"], [2, 1, 1, "", "MitoProjectSegmentation"]], "dcp_server.segmentationclasses.GFPProjectSegmentation": [[2, 2, 1, "", "segment_image"]], "dcp_server.segmentationclasses.GeneralSegmentation": [[2, 2, 1, "", "segment_image"], [2, 2, 1, "", "train"]], "dcp_server.segmentationclasses.MitoProjectSegmentation": [[2, 2, 1, "", "segment_image"]], "dcp_server.serviceclasses": [[2, 1, 1, "", "CustomBentoService"], [2, 1, 1, "", "CustomRunnable"]], "dcp_server.serviceclasses.CustomBentoService": [[2, 2, 1, "", "start_service"]], "dcp_server.serviceclasses.CustomRunnable": [[2, 4, 1, "", "SUPPORTED_RESOURCES"], [2, 4, 1, "", "SUPPORTS_CPU_MULTI_THREADING"], [2, 4, 1, "", "bentoml_runnable_methods__"], [2, 2, 1, "", "check_and_load_model"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "train"]], "dcp_server.utils": [[2, 3, 1, "", "create_dataset_for_rf"], [2, 3, 1, "", "create_patch_dataset"], [2, 3, 1, "", "crop_centered_padded_patch"], [2, 3, 1, "", "extract_intensity_features"], [2, 3, 1, "", "find_max_patch_size"], [2, 3, 1, "", "get_center_of_mass_and_label"], [2, 3, 1, "", "get_centered_patches"], [2, 3, 1, "", "get_file_extension"], [2, 3, 1, "", "get_objects"], [2, 3, 1, "", "get_path_name"], [2, 3, 1, "", "get_path_parent"], [2, 3, 1, "", "get_path_stem"], [2, 3, 1, "", "get_shape_features"], [2, 3, 1, "", "join_path"], [2, 3, 1, "", "read_config"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"dcp_client": 0, "packag": 0, "app": 0, "modul": [0, 2], "main": 0, "dcp": [1, 3], "client": 1, "instal": [1, 3], "run": [1, 3], "A": 1, "step": 1, "guid": 1, "1": 1, "configur": 1, "2": 1, "launch": [1, 3], "3": 1, "welcom": 1, "window": 1, "4": 1, "set": 1, "path": 1, "5": 1, "data": [1, 4], "overview": 1, "dcp_server": 2, "fsimagestorag": 2, "model": [2, 3], "segmentationclass": 2, "serviceclass": 2, "util": 2, "server": 3, "custom": 3, "develop": [3, 4], "docker": 3, "compos": 3, "non": 3, "interact": 3, "centric": [1, 4], "platform": 4, "how": 4, "us": 4, "toi": 4, "enabl": 4, "content": 4, "src": 5, "6": 1, "The": 1, "viewer": 1, "workflow": 1, "intend": 1, "usag": 1, "summari": 1}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"dcp_client package": [[0, "dcp-client-package"]], "dcp_client.app module": [[0, "module-dcp_client.app"]], "dcp_client.main module": [[0, "module-dcp_client.main"]], "DCP Client": [[1, "dcp-client"]], "Installation": [[1, "installation"], [3, "installation"]], "Running the client: A step-by-step guide!": [[1, "running-the-client-a-step-by-step-guide"]], "1. Configurations": [[1, "configurations"]], "2. Launching the client": [[1, "launching-the-client"]], "3. Welcome window": [[1, "welcome-window"]], "4. Setting paths": [[1, "setting-paths"]], "5. Data Overview": [[1, "data-overview"]], "6. The viewer": [[1, "the-viewer"]], "Data centric workflow [intended usage summary]": [[1, "data-centric-workflow-intended-usage-summary"]], "dcp_server.fsimagestorage module": [[2, "module-dcp_server.fsimagestorage"]], "dcp_server.models module": [[2, "module-dcp_server.models"]], "dcp_server.segmentationclasses module": [[2, "module-dcp_server.segmentationclasses"]], "dcp_server.serviceclasses module": [[2, "module-dcp_server.serviceclasses"]], "dcp_server.utils module": [[2, "module-dcp_server.utils"]], "DCP Server": [[3, "dcp-server"]], "Launch DCP Server": [[3, "launch-dcp-server"]], "Customization (for developers)": [[3, "customization-for-developers"]], "Models": [[3, "models"]], "Running with Docker": [[3, "running-with-docker"]], "Docker-Compose": [[3, "docker-compose"]], "Docker Non-Interactively": [[3, "docker-non-interactively"]], "Docker Interactively": [[3, "docker-interactively"]], "Data Centric Platform": [[4, "data-centric-platform"]], "How to use it?": [[4, "how-to-use-it"]], "Toy data": [[4, "toy-data"]], "Enabling data centric development": [[4, "enabling-data-centric-development"]], "Contents:": [[4, null]], "src": [[5, "src"]]}, "indexentries": {"application (class in dcp_client.app)": [[0, "dcp_client.app.Application"]], "datasync (class in dcp_client.app)": [[0, "dcp_client.app.DataSync"]], "imagestorage (class in dcp_client.app)": [[0, "dcp_client.app.ImageStorage"]], "model (class in dcp_client.app)": [[0, "dcp_client.app.Model"]], "dcp_client.app": [[0, "module-dcp_client.app"]], "dcp_client.main": [[0, "module-dcp_client.main"]], "delete_images() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.delete_images"]], "load_image() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.load_image"]], "load_image() (dcp_client.app.imagestorage method)": [[0, "dcp_client.app.ImageStorage.load_image"]], "main() (in module dcp_client.main)": [[0, "dcp_client.main.main"]], "module": [[0, "module-dcp_client.app"], [0, "module-dcp_client.main"], [2, "module-dcp_server.fsimagestorage"], [2, "module-dcp_server.models"], [2, "module-dcp_server.segmentationclasses"], [2, "module-dcp_server.serviceclasses"], [2, "module-dcp_server.utils"]], "move_images() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.move_images"]], "run_inference() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.run_inference"]], "run_inference() (dcp_client.app.model method)": [[0, "dcp_client.app.Model.run_inference"]], "run_train() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.run_train"]], "run_train() (dcp_client.app.model method)": [[0, "dcp_client.app.Model.run_train"]], "save_image() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.save_image"]], "save_image() (dcp_client.app.imagestorage method)": [[0, "dcp_client.app.ImageStorage.save_image"]], "search_segs() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.search_segs"]], "search_segs() (dcp_client.app.imagestorage method)": [[0, "dcp_client.app.ImageStorage.search_segs"]], "sync() (dcp_client.app.datasync method)": [[0, "dcp_client.app.DataSync.sync"]], "try_server_connection() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.try_server_connection"]], "upload_data_to_server() (dcp_client.app.application method)": [[0, "dcp_client.app.Application.upload_data_to_server"]], "cellclassifierfcnn (class in dcp_server.models)": [[2, "dcp_server.models.CellClassifierFCNN"]], "cellclassifiershallowmodel (class in dcp_server.models)": [[2, "dcp_server.models.CellClassifierShallowModel"]], "cellposepatchcnn (class in dcp_server.models)": [[2, "dcp_server.models.CellposePatchCNN"]], "custombentoservice (class in dcp_server.serviceclasses)": [[2, "dcp_server.serviceclasses.CustomBentoService"]], "customcellposemodel (class in dcp_server.models)": [[2, "dcp_server.models.CustomCellposeModel"]], "customrunnable (class in dcp_server.serviceclasses)": [[2, "dcp_server.serviceclasses.CustomRunnable"]], "filesystemimagestorage (class in dcp_server.fsimagestorage)": [[2, "dcp_server.fsimagestorage.FilesystemImageStorage"]], "gfpprojectsegmentation (class in dcp_server.segmentationclasses)": [[2, "dcp_server.segmentationclasses.GFPProjectSegmentation"]], "generalsegmentation (class in dcp_server.segmentationclasses)": [[2, "dcp_server.segmentationclasses.GeneralSegmentation"]], "mitoprojectsegmentation (class in dcp_server.segmentationclasses)": [[2, "dcp_server.segmentationclasses.MitoProjectSegmentation"]], "supported_resources (dcp_server.serviceclasses.customrunnable attribute)": [[2, "dcp_server.serviceclasses.CustomRunnable.SUPPORTED_RESOURCES"]], "supports_cpu_multi_threading (dcp_server.serviceclasses.customrunnable attribute)": [[2, "dcp_server.serviceclasses.CustomRunnable.SUPPORTS_CPU_MULTI_THREADING"]], "unet (class in dcp_server.models)": [[2, "dcp_server.models.UNet"]], "unet.doubleconv (class in dcp_server.models)": [[2, "dcp_server.models.UNet.DoubleConv"]], "bentoml_runnable_methods__ (dcp_server.serviceclasses.customrunnable attribute)": [[2, "dcp_server.serviceclasses.CustomRunnable.bentoml_runnable_methods__"]], "check_and_load_model() (dcp_server.serviceclasses.customrunnable method)": [[2, "dcp_server.serviceclasses.CustomRunnable.check_and_load_model"]], "create_dataset_for_rf() (in module dcp_server.utils)": [[2, "dcp_server.utils.create_dataset_for_rf"]], "create_patch_dataset() (in module dcp_server.utils)": [[2, "dcp_server.utils.create_patch_dataset"]], "crop_centered_padded_patch() (in module dcp_server.utils)": [[2, "dcp_server.utils.crop_centered_padded_patch"]], "dcp_server.fsimagestorage": [[2, "module-dcp_server.fsimagestorage"]], "dcp_server.models": [[2, "module-dcp_server.models"]], "dcp_server.segmentationclasses": [[2, "module-dcp_server.segmentationclasses"]], "dcp_server.serviceclasses": [[2, "module-dcp_server.serviceclasses"]], "dcp_server.utils": [[2, "module-dcp_server.utils"]], "eval() (dcp_server.models.cellclassifierfcnn method)": [[2, "dcp_server.models.CellClassifierFCNN.eval"]], "eval() (dcp_server.models.cellclassifiershallowmodel method)": [[2, "dcp_server.models.CellClassifierShallowModel.eval"]], "eval() (dcp_server.models.cellposepatchcnn method)": [[2, "dcp_server.models.CellposePatchCNN.eval"]], "eval() (dcp_server.models.customcellposemodel method)": [[2, "dcp_server.models.CustomCellposeModel.eval"]], "eval() (dcp_server.models.unet method)": [[2, "dcp_server.models.UNet.eval"]], "evaluate() (dcp_server.serviceclasses.customrunnable method)": [[2, "dcp_server.serviceclasses.CustomRunnable.evaluate"]], "extract_intensity_features() (in module dcp_server.utils)": [[2, "dcp_server.utils.extract_intensity_features"]], "find_max_patch_size() (in module dcp_server.utils)": [[2, "dcp_server.utils.find_max_patch_size"]], "forward() (dcp_server.models.cellclassifierfcnn method)": [[2, "dcp_server.models.CellClassifierFCNN.forward"]], "forward() (dcp_server.models.unet method)": [[2, "dcp_server.models.UNet.forward"]], "forward() (dcp_server.models.unet.doubleconv method)": [[2, "dcp_server.models.UNet.DoubleConv.forward"]], "get_center_of_mass_and_label() (in module dcp_server.utils)": [[2, "dcp_server.utils.get_center_of_mass_and_label"]], "get_centered_patches() (in module dcp_server.utils)": [[2, "dcp_server.utils.get_centered_patches"]], "get_file_extension() (in module dcp_server.utils)": [[2, "dcp_server.utils.get_file_extension"]], "get_image_seg_pairs() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[2, "dcp_server.fsimagestorage.FilesystemImageStorage.get_image_seg_pairs"]], "get_image_size_properties() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[2, "dcp_server.fsimagestorage.FilesystemImageStorage.get_image_size_properties"]], "get_objects() (in module dcp_server.utils)": [[2, "dcp_server.utils.get_objects"]], "get_path_name() (in module dcp_server.utils)": [[2, "dcp_server.utils.get_path_name"]], "get_path_parent() (in module dcp_server.utils)": [[2, "dcp_server.utils.get_path_parent"]], "get_path_stem() (in module dcp_server.utils)": [[2, "dcp_server.utils.get_path_stem"]], "get_shape_features() (in module dcp_server.utils)": [[2, "dcp_server.utils.get_shape_features"]], "get_unsupported_files() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[2, "dcp_server.fsimagestorage.FilesystemImageStorage.get_unsupported_files"]], "join_path() (in module dcp_server.utils)": [[2, "dcp_server.utils.join_path"]], "load_image() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[2, "dcp_server.fsimagestorage.FilesystemImageStorage.load_image"]], "masks_to_outlines() (dcp_server.models.customcellposemodel method)": [[2, "dcp_server.models.CustomCellposeModel.masks_to_outlines"]], "model_name (dcp_server.models.unet attribute)": [[2, "dcp_server.models.UNet.model_name"]], "prepare_images_and_masks_for_training() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[2, "dcp_server.fsimagestorage.FilesystemImageStorage.prepare_images_and_masks_for_training"]], "read_config() (in module dcp_server.utils)": [[2, "dcp_server.utils.read_config"]], "rescale_image() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[2, "dcp_server.fsimagestorage.FilesystemImageStorage.rescale_image"]], "resize_mask() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[2, "dcp_server.fsimagestorage.FilesystemImageStorage.resize_mask"]], "save_image() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[2, "dcp_server.fsimagestorage.FilesystemImageStorage.save_image"]], "search_images() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[2, "dcp_server.fsimagestorage.FilesystemImageStorage.search_images"]], "search_segs() (dcp_server.fsimagestorage.filesystemimagestorage method)": [[2, "dcp_server.fsimagestorage.FilesystemImageStorage.search_segs"]], "segment_image() (dcp_server.segmentationclasses.gfpprojectsegmentation method)": [[2, "dcp_server.segmentationclasses.GFPProjectSegmentation.segment_image"]], "segment_image() (dcp_server.segmentationclasses.generalsegmentation method)": [[2, "dcp_server.segmentationclasses.GeneralSegmentation.segment_image"]], "segment_image() (dcp_server.segmentationclasses.mitoprojectsegmentation method)": [[2, "dcp_server.segmentationclasses.MitoProjectSegmentation.segment_image"]], "start_service() (dcp_server.serviceclasses.custombentoservice method)": [[2, "dcp_server.serviceclasses.CustomBentoService.start_service"]], "train() (dcp_server.models.cellclassifierfcnn method)": [[2, "dcp_server.models.CellClassifierFCNN.train"]], "train() (dcp_server.models.cellclassifiershallowmodel method)": [[2, "dcp_server.models.CellClassifierShallowModel.train"]], "train() (dcp_server.models.cellposepatchcnn method)": [[2, "dcp_server.models.CellposePatchCNN.train"]], "train() (dcp_server.models.customcellposemodel method)": [[2, "dcp_server.models.CustomCellposeModel.train"]], "train() (dcp_server.models.unet method)": [[2, "dcp_server.models.UNet.train"]], "train() (dcp_server.segmentationclasses.generalsegmentation method)": [[2, "dcp_server.segmentationclasses.GeneralSegmentation.train"]], "train() (dcp_server.serviceclasses.customrunnable method)": [[2, "dcp_server.serviceclasses.CustomRunnable.train"]], "update_configs() (dcp_server.models.cellclassifierfcnn method)": [[2, "dcp_server.models.CellClassifierFCNN.update_configs"]], "update_configs() (dcp_server.models.cellposepatchcnn method)": [[2, "dcp_server.models.CellposePatchCNN.update_configs"]], "update_configs() (dcp_server.models.customcellposemodel method)": [[2, "dcp_server.models.CustomCellposeModel.update_configs"]]}})